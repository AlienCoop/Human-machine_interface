<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet2" targetNamespace="http://tempuri.org/DataSet2.xsd" xmlns:mstns="http://tempuri.org/DataSet2.xsd" xmlns="http://tempuri.org/DataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataBaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataBaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Human_machine_interface.Properties.Settings.GlobalReference.Default.DataBaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoryOfPositionTableAdapter" GeneratorDataComponentClassName="CategoryOfPositionTableAdapter" Name="CategoryOfPosition" UserDataComponentName="CategoryOfPositionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.CategoryOfPosition" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CategoryOfPosition] WHERE (([CategoryID] = @Original_CategoryID) AND ([CategoryName] = @Original_CategoryName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CategoryOfPosition] ([CategoryID], [CategoryName]) VALUES (@CategoryID, @CategoryName);
SELECT CategoryID, CategoryName FROM CategoryOfPosition WHERE (CategoryID = @CategoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CategoryID, CategoryName FROM dbo.CategoryOfPosition</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CategoryOfPosition] SET [CategoryID] = @CategoryID, [CategoryName] = @CategoryName WHERE (([CategoryID] = @Original_CategoryID) AND ([CategoryName] = @Original_CategoryName));
SELECT CategoryID, CategoryName FROM CategoryOfPosition WHERE (CategoryID = @CategoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CategoryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CategoryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CategoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CategoryID" DataSetColumn="CategoryID" />
              <Mapping SourceColumn="CategoryName" DataSetColumn="CategoryName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkerTableAdapter" GeneratorDataComponentClassName="WorkerTableAdapter" Name="Worker" UserDataComponentName="WorkerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.Worker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Worker] WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([Surname] = @Original_Surname) AND ([Gender] = @Original_Gender) AND ([Birthday] = @Original_Birthday) AND ([Education] = @Original_Education) AND ([Marital Status] = @Original_Marital_Status))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Gender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Birthday" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_Education" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Education" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Marital_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Marital Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Worker] ([Name], [Surname], [Gender], [Birthday], [Education], [Marital Status]) VALUES (@Name, @Surname, @Gender, @Birthday, @Education, @Marital_Status);
SELECT ID, Name, Surname, Gender, Birthday, Education, [Marital Status] FROM Worker WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Gender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Birthday" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Education" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Education" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Marital_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Marital Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name, Surname, Gender, Birthday, Education, [Marital Status] FROM dbo.Worker</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Worker] SET [Name] = @Name, [Surname] = @Surname, [Gender] = @Gender, [Birthday] = @Birthday, [Education] = @Education, [Marital Status] = @Marital_Status WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([Surname] = @Original_Surname) AND ([Gender] = @Original_Gender) AND ([Birthday] = @Original_Birthday) AND ([Education] = @Original_Education) AND ([Marital Status] = @Original_Marital_Status));
SELECT ID, Name, Surname, Gender, Birthday, Education, [Marital Status] FROM Worker WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Gender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Birthday" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Education" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Education" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Marital_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Marital Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Gender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Birthday" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Birthday" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_Education" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Education" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Marital_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Marital Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Surname" DataSetColumn="Surname" />
              <Mapping SourceColumn="Gender" DataSetColumn="Gender" />
              <Mapping SourceColumn="Birthday" DataSetColumn="Birthday" />
              <Mapping SourceColumn="Education" DataSetColumn="Education" />
              <Mapping SourceColumn="Marital Status" DataSetColumn="Marital Status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Education1TableAdapter" GeneratorDataComponentClassName="Education1TableAdapter" Name="Education1" UserDataComponentName="Education1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.Education1" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Education1] WHERE (([EducationName] = @Original_EducationName) AND ([EducationID] = @Original_EducationID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EducationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EducationName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_EducationID" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="EducationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Education1] ([EducationName]) VALUES (@EducationName);
SELECT EducationName, EducationID FROM Education1 WHERE (EducationID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EducationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EducationName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EducationName, EducationID FROM dbo.Education1</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Education1] SET [EducationName] = @EducationName WHERE (([EducationName] = @Original_EducationName) AND ([EducationID] = @Original_EducationID));
SELECT EducationName, EducationID FROM Education1 WHERE (EducationID = @EducationID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EducationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EducationName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_EducationName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EducationName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_EducationID" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="EducationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="EducationID" ColumnName="EducationID" DataSourceName="" DataTypeServer="tinyint" DbType="Byte" Direction="Input" ParameterName="@EducationID" Precision="0" ProviderType="TinyInt" Scale="0" Size="1" SourceColumn="EducationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EducationName" DataSetColumn="EducationName" />
              <Mapping SourceColumn="EducationID" DataSetColumn="EducationID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EducationDocumentTableAdapter" GeneratorDataComponentClassName="EducationDocumentTableAdapter" Name="EducationDocument" UserDataComponentName="EducationDocumentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.EducationDocument" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EducationDocument] ([DateOfReceiving], [Education], [LastDocument]) VALUES (@DateOfReceiving, @Education, @LastDocument)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateOfReceiving" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateOfReceiving" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Education" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Education" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LastDocument" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LastDocument" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DateOfReceiving, Education, LastDocument FROM dbo.EducationDocument</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DateOfReceiving" DataSetColumn="DateOfReceiving" />
              <Mapping SourceColumn="Education" DataSetColumn="Education" />
              <Mapping SourceColumn="LastDocument" DataSetColumn="LastDocument" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GenderTableAdapter" GeneratorDataComponentClassName="GenderTableAdapter" Name="Gender" UserDataComponentName="GenderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.Gender" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Gender] WHERE (([GenderID] = @Original_GenderID) AND ([GenderName] = @Original_GenderName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GenderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GenderName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Gender] ([GenderName]) VALUES (@GenderName);
SELECT GenderID, GenderName FROM Gender WHERE (GenderID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GenderName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GenderID, GenderName FROM dbo.Gender</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Gender] SET [GenderName] = @GenderName WHERE (([GenderID] = @Original_GenderID) AND ([GenderName] = @Original_GenderName));
SELECT GenderID, GenderName FROM Gender WHERE (GenderID = @GenderID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GenderName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GenderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GenderName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GenderID" ColumnName="GenderID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GenderID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GenderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GenderID" DataSetColumn="GenderID" />
              <Mapping SourceColumn="GenderName" DataSetColumn="GenderName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HistoryMeterageTableAdapter" GeneratorDataComponentClassName="HistoryMeterageTableAdapter" Name="HistoryMeterage" UserDataComponentName="HistoryMeterageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.HistoryMeterage" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[HistoryMeterage] ([IDworker], [Growth], [Weight], [DateMeterage]) VALUES (@IDworker, @Growth, @Weight, @DateMeterage)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDworker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDworker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Growth" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Growth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Weight" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateMeterage" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateMeterage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDworker, Growth, Weight, DateMeterage FROM dbo.HistoryMeterage</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDworker" DataSetColumn="IDworker" />
              <Mapping SourceColumn="Growth" DataSetColumn="Growth" />
              <Mapping SourceColumn="Weight" DataSetColumn="Weight" />
              <Mapping SourceColumn="DateMeterage" DataSetColumn="DateMeterage" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HistoryOfDiseaseTableAdapter" GeneratorDataComponentClassName="HistoryOfDiseaseTableAdapter" Name="HistoryOfDisease" UserDataComponentName="HistoryOfDiseaseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.HistoryOfDisease" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[HistoryOfDisease] ([IDworker], [IDdisease], [DateOfStart], [DateOfEnding]) VALUES (@IDworker, @IDdisease, @DateOfStart, @DateOfEnding)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDworker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDworker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDdisease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDdisease" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateOfStart" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateOfStart" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateOfEnding" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateOfEnding" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDworker, IDdisease, DateOfStart, DateOfEnding FROM dbo.HistoryOfDisease</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDworker" DataSetColumn="IDworker" />
              <Mapping SourceColumn="IDdisease" DataSetColumn="IDdisease" />
              <Mapping SourceColumn="DateOfStart" DataSetColumn="DateOfStart" />
              <Mapping SourceColumn="DateOfEnding" DataSetColumn="DateOfEnding" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MaritalStatusTableAdapter" GeneratorDataComponentClassName="MaritalStatusTableAdapter" Name="MaritalStatus" UserDataComponentName="MaritalStatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.MaritalStatus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MaritalStatus] ([WorkerID], [MaritalStatusID]) VALUES (@WorkerID, @MaritalStatusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaritalStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaritalStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WorkerID, MaritalStatusID FROM dbo.MaritalStatus</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WorkerID" DataSetColumn="WorkerID" />
              <Mapping SourceColumn="MaritalStatusID" DataSetColumn="MaritalStatusID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MovementOnJobHistoryTableAdapter" GeneratorDataComponentClassName="MovementOnJobHistoryTableAdapter" Name="MovementOnJobHistory" UserDataComponentName="MovementOnJobHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.MovementOnJobHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MovementOnJobHistory] ([Subdivision], [Position], [CategoryOfPosition], [Salary], [DateOfStart], [DateOfEnding], [PreviousPosition]) VALUES (@Subdivision, @Position, @CategoryOfPosition, @Salary, @DateOfStart, @DateOfEnding, @PreviousPosition)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Subdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Subdivision" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Position" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CategoryOfPosition" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryOfPosition" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Salary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateOfStart" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateOfStart" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateOfEnding" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateOfEnding" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PreviousPosition" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PreviousPosition" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Subdivision, Position, CategoryOfPosition, Salary, DateOfStart, DateOfEnding, ID, PreviousPosition FROM dbo.MovementOnJobHistory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Subdivision" DataSetColumn="Subdivision" />
              <Mapping SourceColumn="Position" DataSetColumn="Position" />
              <Mapping SourceColumn="CategoryOfPosition" DataSetColumn="CategoryOfPosition" />
              <Mapping SourceColumn="Salary" DataSetColumn="Salary" />
              <Mapping SourceColumn="DateOfStart" DataSetColumn="DateOfStart" />
              <Mapping SourceColumn="DateOfEnding" DataSetColumn="DateOfEnding" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="PreviousPosition" DataSetColumn="PreviousPosition" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NameOfDiseaseTableAdapter" GeneratorDataComponentClassName="NameOfDiseaseTableAdapter" Name="NameOfDisease" UserDataComponentName="NameOfDiseaseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.NameOfDisease" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[NameOfDisease] WHERE (([IDdisease] = @Original_IDdisease) AND ([NameDisease] = @Original_NameDisease))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDdisease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDdisease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameDisease" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameDisease" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[NameOfDisease] ([NameDisease]) VALUES (@NameDisease);
SELECT IDdisease, NameDisease FROM NameOfDisease WHERE (IDdisease = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameDisease" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameDisease" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDdisease, NameDisease FROM dbo.NameOfDisease</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[NameOfDisease] SET [NameDisease] = @NameDisease WHERE (([IDdisease] = @Original_IDdisease) AND ([NameDisease] = @Original_NameDisease));
SELECT IDdisease, NameDisease FROM NameOfDisease WHERE (IDdisease = @IDdisease)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameDisease" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameDisease" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDdisease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDdisease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameDisease" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameDisease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDdisease" ColumnName="IDdisease" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDdisease" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDdisease" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDdisease" DataSetColumn="IDdisease" />
              <Mapping SourceColumn="NameDisease" DataSetColumn="NameDisease" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PositionOfWorkerTableAdapter" GeneratorDataComponentClassName="PositionOfWorkerTableAdapter" Name="PositionOfWorker" UserDataComponentName="PositionOfWorkerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.PositionOfWorker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PositionOfWorker] WHERE (([PositionID] = @Original_PositionID) AND ([PositionName] = @Original_PositionName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PositionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PositionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PositionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PositionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PositionOfWorker] ([PositionName]) VALUES (@PositionName);
SELECT PositionID, PositionName FROM PositionOfWorker WHERE (PositionID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PositionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PositionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PositionID, PositionName FROM dbo.PositionOfWorker</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PositionOfWorker] SET [PositionName] = @PositionName WHERE (([PositionID] = @Original_PositionID) AND ([PositionName] = @Original_PositionName));
SELECT PositionID, PositionName FROM PositionOfWorker WHERE (PositionID = @PositionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@PositionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PositionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PositionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PositionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_PositionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="PositionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PositionID" ColumnName="PositionID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PositionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PositionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PositionID" DataSetColumn="PositionID" />
              <Mapping SourceColumn="PositionName" DataSetColumn="PositionName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatusTableAdapter" GeneratorDataComponentClassName="StatusTableAdapter" Name="Status" UserDataComponentName="StatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.Status" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Status] WHERE (([MaritalStatusID] = @Original_MaritalStatusID) AND ([MaritalStatusName] = @Original_MaritalStatusName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaritalStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaritalStatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MaritalStatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MaritalStatusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Status] ([MaritalStatusID], [MaritalStatusName]) VALUES (@MaritalStatusID, @MaritalStatusName);
SELECT MaritalStatusID, MaritalStatusName FROM Status WHERE (MaritalStatusID = @MaritalStatusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaritalStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaritalStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MaritalStatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MaritalStatusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaritalStatusID, MaritalStatusName FROM dbo.Status</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Status] SET [MaritalStatusID] = @MaritalStatusID, [MaritalStatusName] = @MaritalStatusName WHERE (([MaritalStatusID] = @Original_MaritalStatusID) AND ([MaritalStatusName] = @Original_MaritalStatusName));
SELECT MaritalStatusID, MaritalStatusName FROM Status WHERE (MaritalStatusID = @MaritalStatusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaritalStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaritalStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MaritalStatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MaritalStatusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaritalStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaritalStatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MaritalStatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MaritalStatusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaritalStatusID" DataSetColumn="MaritalStatusID" />
              <Mapping SourceColumn="MaritalStatusName" DataSetColumn="MaritalStatusName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubdivisionTableAdapter" GeneratorDataComponentClassName="SubdivisionTableAdapter" Name="Subdivision" UserDataComponentName="SubdivisionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.Subdivision" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Subdivision] WHERE (([SubdivisionID] = @Original_SubdivisionID) AND ([SubdivisionName] = @Original_SubdivisionName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SubdivisionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SubdivisionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Subdivision] ([SubdivisionName]) VALUES (@SubdivisionName);
SELECT SubdivisionID, SubdivisionName FROM Subdivision WHERE (SubdivisionID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SubdivisionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SubdivisionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SubdivisionID, SubdivisionName FROM dbo.Subdivision</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Subdivision] SET [SubdivisionName] = @SubdivisionName WHERE (([SubdivisionID] = @Original_SubdivisionID) AND ([SubdivisionName] = @Original_SubdivisionName));
SELECT SubdivisionID, SubdivisionName FROM Subdivision WHERE (SubdivisionID = @SubdivisionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SubdivisionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SubdivisionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SubdivisionName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SubdivisionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SubdivisionID" ColumnName="SubdivisionID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SubdivisionID" DataSetColumn="SubdivisionID" />
              <Mapping SourceColumn="SubdivisionName" DataSetColumn="SubdivisionName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VaccinationTableAdapter" GeneratorDataComponentClassName="VaccinationTableAdapter" Name="Vaccination" UserDataComponentName="VaccinationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.Vaccination" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Vaccination] WHERE (([ID] = @Original_ID) AND ([NameOfVac] = @Original_NameOfVac))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NameOfVac" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NameOfVac" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Vaccination] ([NameOfVac]) VALUES (@NameOfVac);
SELECT ID, NameOfVac FROM Vaccination WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NameOfVac" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NameOfVac" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameOfVac FROM dbo.Vaccination</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Vaccination] SET [NameOfVac] = @NameOfVac WHERE (([ID] = @Original_ID) AND ([NameOfVac] = @Original_NameOfVac));
SELECT ID, NameOfVac FROM Vaccination WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NameOfVac" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NameOfVac" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NameOfVac" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NameOfVac" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameOfVac" DataSetColumn="NameOfVac" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VaccinationOfWorkerTableAdapter" GeneratorDataComponentClassName="VaccinationOfWorkerTableAdapter" Name="VaccinationOfWorker" UserDataComponentName="VaccinationOfWorkerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseConnectionString (Settings)" DbObjectName="[DataBase].dbo.VaccinationOfWorker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[VaccinationOfWorker] ([IDworker], [IDVaccination]) VALUES (@IDworker, @IDVaccination)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDworker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDworker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDVaccination" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDVaccination" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDworker, IDVaccination FROM dbo.VaccinationOfWorker</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDworker" DataSetColumn="IDworker" />
              <Mapping SourceColumn="IDVaccination" DataSetColumn="IDVaccination" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="DataSet2" msprop:Generator_DataSetName="DataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CategoryOfPosition" msprop:Generator_RowEvHandlerName="CategoryOfPositionRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoryOfPositionRowDeleted" msprop:Generator_RowDeletingName="CategoryOfPositionRowDeleting" msprop:Generator_RowEvArgName="CategoryOfPositionRowChangeEvent" msprop:Generator_TablePropName="CategoryOfPosition" msprop:Generator_RowChangedName="CategoryOfPositionRowChanged" msprop:Generator_RowChangingName="CategoryOfPositionRowChanging" msprop:Generator_TableClassName="CategoryOfPositionDataTable" msprop:Generator_RowClassName="CategoryOfPositionRow" msprop:Generator_TableVarName="tableCategoryOfPosition" msprop:Generator_UserTableName="CategoryOfPosition">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CategoryID" msprop:Generator_ColumnPropNameInRow="CategoryID" msprop:Generator_ColumnPropNameInTable="CategoryIDColumn" msprop:Generator_ColumnVarNameInTable="columnCategoryID" msprop:Generator_UserColumnName="CategoryID" type="xs:int" />
              <xs:element name="CategoryName" msprop:Generator_ColumnPropNameInRow="CategoryName" msprop:Generator_ColumnPropNameInTable="CategoryNameColumn" msprop:Generator_ColumnVarNameInTable="columnCategoryName" msprop:Generator_UserColumnName="CategoryName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Worker" msprop:Generator_RowEvHandlerName="WorkerRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkerRowDeleted" msprop:Generator_RowDeletingName="WorkerRowDeleting" msprop:Generator_RowEvArgName="WorkerRowChangeEvent" msprop:Generator_TablePropName="Worker" msprop:Generator_RowChangedName="WorkerRowChanged" msprop:Generator_RowChangingName="WorkerRowChanging" msprop:Generator_TableClassName="WorkerDataTable" msprop:Generator_RowClassName="WorkerRow" msprop:Generator_TableVarName="tableWorker" msprop:Generator_UserTableName="Worker">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Surname" msprop:Generator_ColumnPropNameInRow="Surname" msprop:Generator_ColumnPropNameInTable="SurnameColumn" msprop:Generator_ColumnVarNameInTable="columnSurname" msprop:Generator_UserColumnName="Surname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Gender" msprop:Generator_ColumnPropNameInRow="Gender" msprop:Generator_ColumnPropNameInTable="GenderColumn" msprop:Generator_ColumnVarNameInTable="columnGender" msprop:Generator_UserColumnName="Gender" type="xs:int" />
              <xs:element name="Birthday" msprop:Generator_ColumnPropNameInRow="Birthday" msprop:Generator_ColumnPropNameInTable="BirthdayColumn" msprop:Generator_ColumnVarNameInTable="columnBirthday" msprop:Generator_UserColumnName="Birthday" type="xs:dateTime" />
              <xs:element name="Education" msprop:Generator_ColumnPropNameInRow="Education" msprop:Generator_ColumnPropNameInTable="EducationColumn" msprop:Generator_ColumnVarNameInTable="columnEducation" msprop:Generator_UserColumnName="Education" type="xs:unsignedByte" />
              <xs:element name="Marital_x0020_Status" msprop:Generator_ColumnPropNameInRow="Marital_Status" msprop:Generator_ColumnPropNameInTable="Marital_StatusColumn" msprop:Generator_ColumnVarNameInTable="columnMarital_Status" msprop:Generator_UserColumnName="Marital Status" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Education1" msprop:Generator_RowEvHandlerName="Education1RowChangeEventHandler" msprop:Generator_RowDeletedName="Education1RowDeleted" msprop:Generator_RowDeletingName="Education1RowDeleting" msprop:Generator_RowEvArgName="Education1RowChangeEvent" msprop:Generator_TablePropName="Education1" msprop:Generator_RowChangedName="Education1RowChanged" msprop:Generator_RowChangingName="Education1RowChanging" msprop:Generator_TableClassName="Education1DataTable" msprop:Generator_RowClassName="Education1Row" msprop:Generator_TableVarName="tableEducation1" msprop:Generator_UserTableName="Education1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EducationName" msprop:Generator_ColumnPropNameInRow="EducationName" msprop:Generator_ColumnPropNameInTable="EducationNameColumn" msprop:Generator_ColumnVarNameInTable="columnEducationName" msprop:Generator_UserColumnName="EducationName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EducationID" msdata:ReadOnly="true" msprop:Generator_ColumnPropNameInRow="EducationID" msprop:Generator_ColumnPropNameInTable="EducationIDColumn" msprop:Generator_ColumnVarNameInTable="columnEducationID" msprop:Generator_UserColumnName="EducationID" type="xs:unsignedByte" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EducationDocument" msprop:Generator_RowEvHandlerName="EducationDocumentRowChangeEventHandler" msprop:Generator_RowDeletedName="EducationDocumentRowDeleted" msprop:Generator_RowDeletingName="EducationDocumentRowDeleting" msprop:Generator_RowEvArgName="EducationDocumentRowChangeEvent" msprop:Generator_TablePropName="EducationDocument" msprop:Generator_RowChangedName="EducationDocumentRowChanged" msprop:Generator_RowChangingName="EducationDocumentRowChanging" msprop:Generator_TableClassName="EducationDocumentDataTable" msprop:Generator_RowClassName="EducationDocumentRow" msprop:Generator_TableVarName="tableEducationDocument" msprop:Generator_UserTableName="EducationDocument">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DateOfReceiving" msprop:Generator_ColumnPropNameInRow="DateOfReceiving" msprop:Generator_ColumnPropNameInTable="DateOfReceivingColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfReceiving" msprop:Generator_UserColumnName="DateOfReceiving" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Education" msprop:Generator_ColumnPropNameInRow="Education" msprop:Generator_ColumnPropNameInTable="EducationColumn" msprop:Generator_ColumnVarNameInTable="columnEducation" msprop:Generator_UserColumnName="Education" type="xs:unsignedByte" />
              <xs:element name="LastDocument" msprop:Generator_ColumnPropNameInRow="LastDocument" msprop:Generator_ColumnPropNameInTable="LastDocumentColumn" msprop:Generator_ColumnVarNameInTable="columnLastDocument" msprop:Generator_UserColumnName="LastDocument" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Gender" msprop:Generator_RowEvHandlerName="GenderRowChangeEventHandler" msprop:Generator_RowDeletedName="GenderRowDeleted" msprop:Generator_RowDeletingName="GenderRowDeleting" msprop:Generator_RowEvArgName="GenderRowChangeEvent" msprop:Generator_TablePropName="Gender" msprop:Generator_RowChangedName="GenderRowChanged" msprop:Generator_RowChangingName="GenderRowChanging" msprop:Generator_TableClassName="GenderDataTable" msprop:Generator_RowClassName="GenderRow" msprop:Generator_TableVarName="tableGender" msprop:Generator_UserTableName="Gender">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GenderID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="GenderID" msprop:Generator_ColumnPropNameInTable="GenderIDColumn" msprop:Generator_ColumnVarNameInTable="columnGenderID" msprop:Generator_UserColumnName="GenderID" type="xs:int" />
              <xs:element name="GenderName" msprop:Generator_ColumnPropNameInRow="GenderName" msprop:Generator_ColumnPropNameInTable="GenderNameColumn" msprop:Generator_ColumnVarNameInTable="columnGenderName" msprop:Generator_UserColumnName="GenderName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="HistoryMeterage" msprop:Generator_RowEvHandlerName="HistoryMeterageRowChangeEventHandler" msprop:Generator_RowDeletedName="HistoryMeterageRowDeleted" msprop:Generator_RowDeletingName="HistoryMeterageRowDeleting" msprop:Generator_RowEvArgName="HistoryMeterageRowChangeEvent" msprop:Generator_TablePropName="HistoryMeterage" msprop:Generator_RowChangedName="HistoryMeterageRowChanged" msprop:Generator_RowChangingName="HistoryMeterageRowChanging" msprop:Generator_TableClassName="HistoryMeterageDataTable" msprop:Generator_RowClassName="HistoryMeterageRow" msprop:Generator_TableVarName="tableHistoryMeterage" msprop:Generator_UserTableName="HistoryMeterage">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDworker" msprop:Generator_ColumnPropNameInRow="IDworker" msprop:Generator_ColumnPropNameInTable="IDworkerColumn" msprop:Generator_ColumnVarNameInTable="columnIDworker" msprop:Generator_UserColumnName="IDworker" type="xs:int" />
              <xs:element name="Growth" msprop:Generator_ColumnPropNameInRow="Growth" msprop:Generator_ColumnPropNameInTable="GrowthColumn" msprop:Generator_ColumnVarNameInTable="columnGrowth" msprop:Generator_UserColumnName="Growth" type="xs:double" />
              <xs:element name="Weight" msprop:Generator_ColumnPropNameInRow="Weight" msprop:Generator_ColumnPropNameInTable="WeightColumn" msprop:Generator_ColumnVarNameInTable="columnWeight" msprop:Generator_UserColumnName="Weight" type="xs:double" />
              <xs:element name="DateMeterage" msprop:Generator_ColumnPropNameInRow="DateMeterage" msprop:Generator_ColumnPropNameInTable="DateMeterageColumn" msprop:Generator_ColumnVarNameInTable="columnDateMeterage" msprop:Generator_UserColumnName="DateMeterage" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="HistoryOfDisease" msprop:Generator_RowEvHandlerName="HistoryOfDiseaseRowChangeEventHandler" msprop:Generator_RowDeletedName="HistoryOfDiseaseRowDeleted" msprop:Generator_RowDeletingName="HistoryOfDiseaseRowDeleting" msprop:Generator_RowEvArgName="HistoryOfDiseaseRowChangeEvent" msprop:Generator_TablePropName="HistoryOfDisease" msprop:Generator_RowChangedName="HistoryOfDiseaseRowChanged" msprop:Generator_RowChangingName="HistoryOfDiseaseRowChanging" msprop:Generator_TableClassName="HistoryOfDiseaseDataTable" msprop:Generator_RowClassName="HistoryOfDiseaseRow" msprop:Generator_TableVarName="tableHistoryOfDisease" msprop:Generator_UserTableName="HistoryOfDisease">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDworker" msprop:Generator_ColumnPropNameInRow="IDworker" msprop:Generator_ColumnPropNameInTable="IDworkerColumn" msprop:Generator_ColumnVarNameInTable="columnIDworker" msprop:Generator_UserColumnName="IDworker" type="xs:int" />
              <xs:element name="IDdisease" msprop:Generator_ColumnPropNameInRow="IDdisease" msprop:Generator_ColumnPropNameInTable="IDdiseaseColumn" msprop:Generator_ColumnVarNameInTable="columnIDdisease" msprop:Generator_UserColumnName="IDdisease" type="xs:int" />
              <xs:element name="DateOfStart" msprop:Generator_ColumnPropNameInRow="DateOfStart" msprop:Generator_ColumnPropNameInTable="DateOfStartColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfStart" msprop:Generator_UserColumnName="DateOfStart" type="xs:dateTime" />
              <xs:element name="DateOfEnding" msprop:Generator_ColumnPropNameInRow="DateOfEnding" msprop:Generator_ColumnPropNameInTable="DateOfEndingColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfEnding" msprop:Generator_UserColumnName="DateOfEnding" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MaritalStatus" msprop:Generator_RowEvHandlerName="MaritalStatusRowChangeEventHandler" msprop:Generator_RowDeletedName="MaritalStatusRowDeleted" msprop:Generator_RowDeletingName="MaritalStatusRowDeleting" msprop:Generator_RowEvArgName="MaritalStatusRowChangeEvent" msprop:Generator_TablePropName="MaritalStatus" msprop:Generator_RowChangedName="MaritalStatusRowChanged" msprop:Generator_RowChangingName="MaritalStatusRowChanging" msprop:Generator_TableClassName="MaritalStatusDataTable" msprop:Generator_RowClassName="MaritalStatusRow" msprop:Generator_TableVarName="tableMaritalStatus" msprop:Generator_UserTableName="MaritalStatus">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkerID" msprop:Generator_ColumnPropNameInRow="WorkerID" msprop:Generator_ColumnPropNameInTable="WorkerIDColumn" msprop:Generator_ColumnVarNameInTable="columnWorkerID" msprop:Generator_UserColumnName="WorkerID" type="xs:int" />
              <xs:element name="MaritalStatusID" msprop:Generator_ColumnPropNameInRow="MaritalStatusID" msprop:Generator_ColumnPropNameInTable="MaritalStatusIDColumn" msprop:Generator_ColumnVarNameInTable="columnMaritalStatusID" msprop:Generator_UserColumnName="MaritalStatusID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MovementOnJobHistory" msprop:Generator_RowEvHandlerName="MovementOnJobHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="MovementOnJobHistoryRowDeleted" msprop:Generator_RowDeletingName="MovementOnJobHistoryRowDeleting" msprop:Generator_RowEvArgName="MovementOnJobHistoryRowChangeEvent" msprop:Generator_TablePropName="MovementOnJobHistory" msprop:Generator_RowChangedName="MovementOnJobHistoryRowChanged" msprop:Generator_RowChangingName="MovementOnJobHistoryRowChanging" msprop:Generator_TableClassName="MovementOnJobHistoryDataTable" msprop:Generator_RowClassName="MovementOnJobHistoryRow" msprop:Generator_TableVarName="tableMovementOnJobHistory" msprop:Generator_UserTableName="MovementOnJobHistory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Subdivision" msprop:Generator_ColumnPropNameInRow="Subdivision" msprop:Generator_ColumnPropNameInTable="SubdivisionColumn" msprop:Generator_ColumnVarNameInTable="columnSubdivision" msprop:Generator_UserColumnName="Subdivision" type="xs:int" />
              <xs:element name="Position" msprop:Generator_ColumnPropNameInRow="Position" msprop:Generator_ColumnPropNameInTable="PositionColumn" msprop:Generator_ColumnVarNameInTable="columnPosition" msprop:Generator_UserColumnName="Position" type="xs:int" />
              <xs:element name="CategoryOfPosition" msprop:Generator_ColumnPropNameInRow="CategoryOfPosition" msprop:Generator_ColumnPropNameInTable="CategoryOfPositionColumn" msprop:Generator_ColumnVarNameInTable="columnCategoryOfPosition" msprop:Generator_UserColumnName="CategoryOfPosition" type="xs:int" />
              <xs:element name="Salary" msprop:Generator_ColumnPropNameInRow="Salary" msprop:Generator_ColumnPropNameInTable="SalaryColumn" msprop:Generator_ColumnVarNameInTable="columnSalary" msprop:Generator_UserColumnName="Salary" type="xs:decimal" />
              <xs:element name="DateOfStart" msprop:Generator_ColumnPropNameInRow="DateOfStart" msprop:Generator_ColumnPropNameInTable="DateOfStartColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfStart" msprop:Generator_UserColumnName="DateOfStart" type="xs:dateTime" />
              <xs:element name="DateOfEnding" msprop:Generator_ColumnPropNameInRow="DateOfEnding" msprop:Generator_ColumnPropNameInTable="DateOfEndingColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfEnding" msprop:Generator_UserColumnName="DateOfEnding" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="PreviousPosition" msprop:Generator_ColumnPropNameInRow="PreviousPosition" msprop:Generator_ColumnPropNameInTable="PreviousPositionColumn" msprop:Generator_ColumnVarNameInTable="columnPreviousPosition" msprop:Generator_UserColumnName="PreviousPosition" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="NameOfDisease" msprop:Generator_RowEvHandlerName="NameOfDiseaseRowChangeEventHandler" msprop:Generator_RowDeletedName="NameOfDiseaseRowDeleted" msprop:Generator_RowDeletingName="NameOfDiseaseRowDeleting" msprop:Generator_RowEvArgName="NameOfDiseaseRowChangeEvent" msprop:Generator_TablePropName="NameOfDisease" msprop:Generator_RowChangedName="NameOfDiseaseRowChanged" msprop:Generator_RowChangingName="NameOfDiseaseRowChanging" msprop:Generator_TableClassName="NameOfDiseaseDataTable" msprop:Generator_RowClassName="NameOfDiseaseRow" msprop:Generator_TableVarName="tableNameOfDisease" msprop:Generator_UserTableName="NameOfDisease">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDdisease" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="IDdisease" msprop:Generator_ColumnPropNameInTable="IDdiseaseColumn" msprop:Generator_ColumnVarNameInTable="columnIDdisease" msprop:Generator_UserColumnName="IDdisease" type="xs:int" />
              <xs:element name="NameDisease" msprop:Generator_ColumnPropNameInRow="NameDisease" msprop:Generator_ColumnPropNameInTable="NameDiseaseColumn" msprop:Generator_ColumnVarNameInTable="columnNameDisease" msprop:Generator_UserColumnName="NameDisease">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PositionOfWorker" msprop:Generator_RowEvHandlerName="PositionOfWorkerRowChangeEventHandler" msprop:Generator_RowDeletedName="PositionOfWorkerRowDeleted" msprop:Generator_RowDeletingName="PositionOfWorkerRowDeleting" msprop:Generator_RowEvArgName="PositionOfWorkerRowChangeEvent" msprop:Generator_TablePropName="PositionOfWorker" msprop:Generator_RowChangedName="PositionOfWorkerRowChanged" msprop:Generator_RowChangingName="PositionOfWorkerRowChanging" msprop:Generator_TableClassName="PositionOfWorkerDataTable" msprop:Generator_RowClassName="PositionOfWorkerRow" msprop:Generator_TableVarName="tablePositionOfWorker" msprop:Generator_UserTableName="PositionOfWorker">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PositionID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="PositionID" msprop:Generator_ColumnPropNameInTable="PositionIDColumn" msprop:Generator_ColumnVarNameInTable="columnPositionID" msprop:Generator_UserColumnName="PositionID" type="xs:int" />
              <xs:element name="PositionName" msprop:Generator_ColumnPropNameInRow="PositionName" msprop:Generator_ColumnPropNameInTable="PositionNameColumn" msprop:Generator_ColumnVarNameInTable="columnPositionName" msprop:Generator_UserColumnName="PositionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Status" msprop:Generator_RowEvHandlerName="StatusRowChangeEventHandler" msprop:Generator_RowDeletedName="StatusRowDeleted" msprop:Generator_RowDeletingName="StatusRowDeleting" msprop:Generator_RowEvArgName="StatusRowChangeEvent" msprop:Generator_TablePropName="Status" msprop:Generator_RowChangedName="StatusRowChanged" msprop:Generator_RowChangingName="StatusRowChanging" msprop:Generator_TableClassName="StatusDataTable" msprop:Generator_RowClassName="StatusRow" msprop:Generator_TableVarName="tableStatus" msprop:Generator_UserTableName="Status">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaritalStatusID" msprop:Generator_ColumnPropNameInRow="MaritalStatusID" msprop:Generator_ColumnPropNameInTable="MaritalStatusIDColumn" msprop:Generator_ColumnVarNameInTable="columnMaritalStatusID" msprop:Generator_UserColumnName="MaritalStatusID" type="xs:int" />
              <xs:element name="MaritalStatusName" msprop:Generator_ColumnPropNameInRow="MaritalStatusName" msprop:Generator_ColumnPropNameInTable="MaritalStatusNameColumn" msprop:Generator_ColumnVarNameInTable="columnMaritalStatusName" msprop:Generator_UserColumnName="MaritalStatusName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Subdivision" msprop:Generator_RowEvHandlerName="SubdivisionRowChangeEventHandler" msprop:Generator_RowDeletedName="SubdivisionRowDeleted" msprop:Generator_RowDeletingName="SubdivisionRowDeleting" msprop:Generator_RowEvArgName="SubdivisionRowChangeEvent" msprop:Generator_TablePropName="Subdivision" msprop:Generator_RowChangedName="SubdivisionRowChanged" msprop:Generator_RowChangingName="SubdivisionRowChanging" msprop:Generator_TableClassName="SubdivisionDataTable" msprop:Generator_RowClassName="SubdivisionRow" msprop:Generator_TableVarName="tableSubdivision" msprop:Generator_UserTableName="Subdivision">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SubdivisionID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="SubdivisionID" msprop:Generator_ColumnPropNameInTable="SubdivisionIDColumn" msprop:Generator_ColumnVarNameInTable="columnSubdivisionID" msprop:Generator_UserColumnName="SubdivisionID" type="xs:int" />
              <xs:element name="SubdivisionName" msprop:Generator_ColumnPropNameInRow="SubdivisionName" msprop:Generator_ColumnPropNameInTable="SubdivisionNameColumn" msprop:Generator_ColumnVarNameInTable="columnSubdivisionName" msprop:Generator_UserColumnName="SubdivisionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Vaccination" msprop:Generator_RowEvHandlerName="VaccinationRowChangeEventHandler" msprop:Generator_RowDeletedName="VaccinationRowDeleted" msprop:Generator_RowDeletingName="VaccinationRowDeleting" msprop:Generator_RowEvArgName="VaccinationRowChangeEvent" msprop:Generator_TablePropName="Vaccination" msprop:Generator_RowChangedName="VaccinationRowChanged" msprop:Generator_RowChangingName="VaccinationRowChanging" msprop:Generator_TableClassName="VaccinationDataTable" msprop:Generator_RowClassName="VaccinationRow" msprop:Generator_TableVarName="tableVaccination" msprop:Generator_UserTableName="Vaccination">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameOfVac" msprop:Generator_ColumnPropNameInRow="NameOfVac" msprop:Generator_ColumnPropNameInTable="NameOfVacColumn" msprop:Generator_ColumnVarNameInTable="columnNameOfVac" msprop:Generator_UserColumnName="NameOfVac">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="VaccinationOfWorker" msprop:Generator_RowEvHandlerName="VaccinationOfWorkerRowChangeEventHandler" msprop:Generator_RowDeletedName="VaccinationOfWorkerRowDeleted" msprop:Generator_RowDeletingName="VaccinationOfWorkerRowDeleting" msprop:Generator_RowEvArgName="VaccinationOfWorkerRowChangeEvent" msprop:Generator_TablePropName="VaccinationOfWorker" msprop:Generator_RowChangedName="VaccinationOfWorkerRowChanged" msprop:Generator_RowChangingName="VaccinationOfWorkerRowChanging" msprop:Generator_TableClassName="VaccinationOfWorkerDataTable" msprop:Generator_RowClassName="VaccinationOfWorkerRow" msprop:Generator_TableVarName="tableVaccinationOfWorker" msprop:Generator_UserTableName="VaccinationOfWorker">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDworker" msprop:Generator_ColumnPropNameInRow="IDworker" msprop:Generator_ColumnPropNameInTable="IDworkerColumn" msprop:Generator_ColumnVarNameInTable="columnIDworker" msprop:Generator_UserColumnName="IDworker" type="xs:int" />
              <xs:element name="IDVaccination" msprop:Generator_ColumnPropNameInRow="IDVaccination" msprop:Generator_ColumnPropNameInTable="IDVaccinationColumn" msprop:Generator_ColumnVarNameInTable="columnIDVaccination" msprop:Generator_UserColumnName="IDVaccination" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CategoryOfPosition" />
      <xs:field xpath="mstns:CategoryID" />
    </xs:unique>
    <xs:unique name="Worker_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Worker" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Education1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Education1" />
      <xs:field xpath="mstns:EducationID" />
    </xs:unique>
    <xs:unique name="Gender_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Gender" />
      <xs:field xpath="mstns:GenderID" />
    </xs:unique>
    <xs:unique name="NameOfDisease_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:NameOfDisease" />
      <xs:field xpath="mstns:IDdisease" />
    </xs:unique>
    <xs:unique name="PositionOfWorker_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PositionOfWorker" />
      <xs:field xpath="mstns:PositionID" />
    </xs:unique>
    <xs:unique name="Status_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Status" />
      <xs:field xpath="mstns:MaritalStatusID" />
    </xs:unique>
    <xs:unique name="Subdivision_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Subdivision" />
      <xs:field xpath="mstns:SubdivisionID" />
    </xs:unique>
    <xs:unique name="Vaccination_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Vaccination" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Worker_Education1" msdata:parent="Education1" msdata:child="Worker" msdata:parentkey="EducationID" msdata:childkey="Education" msprop:Generator_UserParentTable="Education1" msprop:Generator_UserChildTable="Worker" msprop:Generator_RelationVarName="relationFK_Worker_Education1" msprop:Generator_UserRelationName="FK_Worker_Education1" msprop:Generator_ChildPropName="GetWorkerRows" msprop:Generator_ParentPropName="Education1Row" />
      <msdata:Relationship name="FK_Worker_Gender1" msdata:parent="Gender" msdata:child="Worker" msdata:parentkey="GenderID" msdata:childkey="Gender" msprop:Generator_UserParentTable="Gender" msprop:Generator_UserChildTable="Worker" msprop:Generator_RelationVarName="relationFK_Worker_Gender1" msprop:Generator_UserRelationName="FK_Worker_Gender1" msprop:Generator_ChildPropName="GetWorkerRows" msprop:Generator_ParentPropName="GenderRow" />
      <msdata:Relationship name="FK_HistoryMeterage_Worker" msdata:parent="Worker" msdata:child="HistoryMeterage" msdata:parentkey="ID" msdata:childkey="IDworker" msprop:Generator_UserParentTable="Worker" msprop:Generator_UserChildTable="HistoryMeterage" msprop:Generator_RelationVarName="relationFK_HistoryMeterage_Worker" msprop:Generator_ChildPropName="GetHistoryMeterageRows" msprop:Generator_ParentPropName="WorkerRow" msprop:Generator_UserRelationName="FK_HistoryMeterage_Worker" />
      <msdata:Relationship name="FK_HistoryOfDisease_NameOfDisease" msdata:parent="NameOfDisease" msdata:child="HistoryOfDisease" msdata:parentkey="IDdisease" msdata:childkey="IDdisease" msprop:Generator_UserParentTable="NameOfDisease" msprop:Generator_UserChildTable="HistoryOfDisease" msprop:Generator_RelationVarName="relationFK_HistoryOfDisease_NameOfDisease" msprop:Generator_UserRelationName="FK_HistoryOfDisease_NameOfDisease" msprop:Generator_ChildPropName="GetHistoryOfDiseaseRows" msprop:Generator_ParentPropName="NameOfDiseaseRow" />
      <msdata:Relationship name="FK_HistoryOfDisease_Worker" msdata:parent="Worker" msdata:child="HistoryOfDisease" msdata:parentkey="ID" msdata:childkey="IDworker" msprop:Generator_UserParentTable="Worker" msprop:Generator_UserChildTable="HistoryOfDisease" msprop:Generator_RelationVarName="relationFK_HistoryOfDisease_Worker" msprop:Generator_ChildPropName="GetHistoryOfDiseaseRows" msprop:Generator_ParentPropName="WorkerRow" msprop:Generator_UserRelationName="FK_HistoryOfDisease_Worker" />
      <msdata:Relationship name="FK_MaritalStatus_Status" msdata:parent="Status" msdata:child="MaritalStatus" msdata:parentkey="MaritalStatusID" msdata:childkey="MaritalStatusID" msprop:Generator_UserParentTable="Status" msprop:Generator_UserChildTable="MaritalStatus" msprop:Generator_RelationVarName="relationFK_MaritalStatus_Status" msprop:Generator_UserRelationName="FK_MaritalStatus_Status" msprop:Generator_ChildPropName="GetMaritalStatusRows" msprop:Generator_ParentPropName="StatusRow" />
      <msdata:Relationship name="FK_MaritalStatus_Worker" msdata:parent="Worker" msdata:child="MaritalStatus" msdata:parentkey="ID" msdata:childkey="WorkerID" msprop:Generator_UserParentTable="Worker" msprop:Generator_UserChildTable="MaritalStatus" msprop:Generator_RelationVarName="relationFK_MaritalStatus_Worker" msprop:Generator_ChildPropName="GetMaritalStatusRows" msprop:Generator_ParentPropName="WorkerRow" msprop:Generator_UserRelationName="FK_MaritalStatus_Worker" />
      <msdata:Relationship name="FK_MovementOnJobHistory_CategoryOfPosition" msdata:parent="CategoryOfPosition" msdata:child="MovementOnJobHistory" msdata:parentkey="CategoryID" msdata:childkey="CategoryOfPosition" msprop:Generator_UserParentTable="CategoryOfPosition" msprop:Generator_UserChildTable="MovementOnJobHistory" msprop:Generator_RelationVarName="relationFK_MovementOnJobHistory_CategoryOfPosition" msprop:Generator_ChildPropName="GetMovementOnJobHistoryRows" msprop:Generator_ParentPropName="CategoryOfPositionRow" msprop:Generator_UserRelationName="FK_MovementOnJobHistory_CategoryOfPosition" />
      <msdata:Relationship name="FK_MovementOnJobHistory_PositionOfWorker" msdata:parent="PositionOfWorker" msdata:child="MovementOnJobHistory" msdata:parentkey="PositionID" msdata:childkey="Position" msprop:Generator_UserParentTable="PositionOfWorker" msprop:Generator_UserChildTable="MovementOnJobHistory" msprop:Generator_RelationVarName="relationFK_MovementOnJobHistory_PositionOfWorker" msprop:Generator_UserRelationName="FK_MovementOnJobHistory_PositionOfWorker" msprop:Generator_ChildPropName="GetMovementOnJobHistoryRows" msprop:Generator_ParentPropName="PositionOfWorkerRow" />
      <msdata:Relationship name="FK_MovementOnJobHistory_Subdivision" msdata:parent="Subdivision" msdata:child="MovementOnJobHistory" msdata:parentkey="SubdivisionID" msdata:childkey="Subdivision" msprop:Generator_UserParentTable="Subdivision" msprop:Generator_UserChildTable="MovementOnJobHistory" msprop:Generator_RelationVarName="relationFK_MovementOnJobHistory_Subdivision" msprop:Generator_UserRelationName="FK_MovementOnJobHistory_Subdivision" msprop:Generator_ChildPropName="GetMovementOnJobHistoryRows" msprop:Generator_ParentPropName="SubdivisionRow" />
      <msdata:Relationship name="FK_MovementOnJobHistory_Worker" msdata:parent="Worker" msdata:child="MovementOnJobHistory" msdata:parentkey="ID" msdata:childkey="ID" msprop:Generator_UserParentTable="Worker" msprop:Generator_UserChildTable="MovementOnJobHistory" msprop:Generator_RelationVarName="relationFK_MovementOnJobHistory_Worker" msprop:Generator_ChildPropName="GetMovementOnJobHistoryRows" msprop:Generator_ParentPropName="WorkerRow" msprop:Generator_UserRelationName="FK_MovementOnJobHistory_Worker" />
      <msdata:Relationship name="FK_VaccinationOfWorker_Vaccination" msdata:parent="Vaccination" msdata:child="VaccinationOfWorker" msdata:parentkey="ID" msdata:childkey="IDVaccination" msprop:Generator_UserParentTable="Vaccination" msprop:Generator_UserChildTable="VaccinationOfWorker" msprop:Generator_RelationVarName="relationFK_VaccinationOfWorker_Vaccination" msprop:Generator_ChildPropName="GetVaccinationOfWorkerRows" msprop:Generator_ParentPropName="VaccinationRow" msprop:Generator_UserRelationName="FK_VaccinationOfWorker_Vaccination" />
      <msdata:Relationship name="FK_VaccinationOfWorker_Worker" msdata:parent="Worker" msdata:child="VaccinationOfWorker" msdata:parentkey="ID" msdata:childkey="IDworker" msprop:Generator_UserParentTable="Worker" msprop:Generator_UserChildTable="VaccinationOfWorker" msprop:Generator_RelationVarName="relationFK_VaccinationOfWorker_Worker" msprop:Generator_ChildPropName="GetVaccinationOfWorkerRows" msprop:Generator_ParentPropName="WorkerRow" msprop:Generator_UserRelationName="FK_VaccinationOfWorker_Worker" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>